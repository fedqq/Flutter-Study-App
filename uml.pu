@startuml
set namespaceSeparator ::

class "studyappcs::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions windows
  {static} +FirebaseOptions currentPlatform
}

"studyappcs::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "studyappcs::main.dart::MyApp" {
  +State<MyApp> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::main.dart::MyApp"

class "studyappcs::main.dart::_MyAppState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::main.dart::_MyAppState"

class "studyappcs::main.dart::NavigationPage" {
  +String title
  +State<NavigationPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::main.dart::NavigationPage"

class "studyappcs::main.dart::_NavigationPageState" {
  +List<Subject> subjects
  +List<Task> tasks
  +List<Task> completedTasks
  +int selectedDest
  +PageController pageController
  +void dispose()
  +void initState()
  +dynamic loadData()
  +void snackbar()
  +void pageChanged()
  +dynamic saveData()
  +void didChangeAppLifecycleState()
  +void selectDestination()
  +dynamic authlogin()
  +Widget build()
}

"studyappcs::main.dart::_NavigationPageState" o-- "flutter::src::widgets::page_view.dart::PageController"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::main.dart::_NavigationPageState"
"flutter::src::widgets::binding.dart::WidgetsBindingObserver" <|-- "studyappcs::main.dart::_NavigationPageState"

class "studyappcs::pages::all_tests_page.dart::AllTestsPage" {
  +String area
  +State<AllTestsPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::all_tests_page.dart::AllTestsPage"

class "studyappcs::pages::all_tests_page.dart::_AllTestsPageState" {
  +AnimationController controller
  +Animation<double> animation
  +void initState()
  +void openTestPage()
  +Widget build()
}

"studyappcs::pages::all_tests_page.dart::_AllTestsPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::pages::all_tests_page.dart::_AllTestsPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::all_tests_page.dart::_AllTestsPageState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "studyappcs::pages::all_tests_page.dart::_AllTestsPageState"

class "studyappcs::pages::calendar_page.dart::CalendarPage" {
  +List<Task> tasks
  +List<Task> completedTasks
  +State<CalendarPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::calendar_page.dart::CalendarPage"

class "studyappcs::pages::calendar_page.dart::_CalendarPageState" {
  +List<Task> timelyTasks
  +List<Task> overdueTasks
  +AnimationController controller
  +Animation<double> animation
  +ExpansionTileController overdueController
  +ExpansionTileController completedController
  +void dispose()
  +void initState()
  +Map<DateTime, List<Task>> getTasksMap()
  +Map<DateTime, List<Task>> getCompletedTasksMap()
  +void createTask()
  +void deleteTask()
  +void deleteCompletedTask()
  +List<DateTime> sortByDate()
  +void completeTask()
  +Widget build()
}

"studyappcs::pages::calendar_page.dart::_CalendarPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::pages::calendar_page.dart::_CalendarPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"studyappcs::pages::calendar_page.dart::_CalendarPageState" o-- "flutter::src::material::expansion_tile.dart::ExpansionTileController"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::calendar_page.dart::_CalendarPageState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "studyappcs::pages::calendar_page.dart::_CalendarPageState"

class "studyappcs::pages::login_page.dart::Loginpage" {
  +State<Loginpage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::login_page.dart::Loginpage"

class "studyappcs::pages::login_page.dart::_LoginpageState" {
  +bool loading
  +bool register
  +String email
  +String password
  +String username
  +void snackbar()
  -dynamic _authUser()
  -dynamic _signupUser()
  +void close()
  +void submit()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::login_page.dart::_LoginpageState"

class "studyappcs::pages::results_page.dart::ResultsPage" {
  +Test test
  +bool editable
  +State<ResultsPage> createState()
}

"studyappcs::pages::results_page.dart::ResultsPage" o-- "studyappcs::states::test.dart::Test"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::results_page.dart::ResultsPage"

class "studyappcs::pages::results_page.dart::_ResultsPageState" {
  +List<TestCard> cards
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::results_page.dart::_ResultsPageState"

class "studyappcs::pages::splash_screen.dart::SplashScreen" {
  +State<SplashScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::splash_screen.dart::SplashScreen"

class "studyappcs::pages::splash_screen.dart::_SplashScreenState" {
  +AnimationController animationController
  +Animation<double> animation
  +void initState()
  +void pushMain()
  +void beginLoad()
  +Widget build()
}

"studyappcs::pages::splash_screen.dart::_SplashScreenState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::pages::splash_screen.dart::_SplashScreenState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::splash_screen.dart::_SplashScreenState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "studyappcs::pages::splash_screen.dart::_SplashScreenState"

class "studyappcs::pages::stats_page.dart::StatsPage" {
  +void Function() saveCallback
  +void Function() loadCallback
  +List<Subject> subjects
  +State<StatsPage> createState()
}

"studyappcs::pages::stats_page.dart::StatsPage" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::stats_page.dart::StatsPage"

class "studyappcs::pages::stats_page.dart::_StatsPageState" {
  +bool showingNameInput
  +AnimationController controller
  +Animation<double> animation
  +void dispose()
  +void initState()
  +void editDailyGoal()
  +void editUserName()
  +Widget buildButton()
  +Widget buildText()
  +void chooseAccentColor()
  +double calculateLearnedPercentage()
  +List<int> totalAndLearned()
  +Widget build()
  +void showThemeOptions()
  +void useDeviceAccentColor()
}

"studyappcs::pages::stats_page.dart::_StatsPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::pages::stats_page.dart::_StatsPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::stats_page.dart::_StatsPageState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "studyappcs::pages::stats_page.dart::_StatsPageState"

class "studyappcs::pages::study_page.dart::StudyPage" {
  +List<FlashCard> cards
  +Topic topic
  +State<StudyPage> createState()
}

"studyappcs::pages::study_page.dart::StudyPage" o-- "studyappcs::states::topic.dart::Topic"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::study_page.dart::StudyPage"

class "studyappcs::pages::study_page.dart::_StudyPageState" {
  +int currentCard
  +bool showingMeaning
  +List<FlashCard> cards
  +void initState()
  +void dispose()
  +String getCurrentText()
  +void goForward()
  +void goBackward()
  +void wrapCurrentCard()
  +void learnCard()
  +void editCard()
  +void deleteCard()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::study_page.dart::_StudyPageState"

class "studyappcs::pages::subjects_page.dart::SubjectsPage" {
  +List<Subject> subjects
  +State<SubjectsPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::subjects_page.dart::SubjectsPage"

class "studyappcs::pages::subjects_page.dart::_SubjectsPageState" {
  +int currentFocused
  +AnimationController enterController
  +Animation<double> enterAnimation
  +AnimationController blurController
  +Animation<double> blurAnimation
  +ExFabController controller
  +void initState()
  +void dispose()
  +void study()
  +void closeMenus()
  +bool validateSubjectName()
  +void newSubject()
  +void deleteSubject()
  +void editColor()
  +void testSubject()
  +List<String> getSubjectNames()
  +void editSubject()
  +void editSubjectInfo()
  +void clearSubjects()
  +void studyAll()
  +void testAll()
  +void showAllTests()
  +Widget build()
}

"studyappcs::pages::subjects_page.dart::_SubjectsPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::pages::subjects_page.dart::_SubjectsPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"studyappcs::pages::subjects_page.dart::_SubjectsPageState" o-- "studyappcs::utils::expandable_fab.dart::ExFabController"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::subjects_page.dart::_SubjectsPageState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "studyappcs::pages::subjects_page.dart::_SubjectsPageState"

class "studyappcs::pages::subject_page.dart::SubjectPage" {
  +Subject subject
  +State<SubjectPage> createState()
}

"studyappcs::pages::subject_page.dart::SubjectPage" o-- "studyappcs::states::subject.dart::Subject"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::subject_page.dart::SubjectPage"

class "studyappcs::pages::subject_page.dart::_SubjectPageState" {
  +void newTopic()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::subject_page.dart::_SubjectPageState"

class "studyappcs::pages::test_page.dart::TestPage" {
  +List<TestCard> cards
  +String testArea
  +Subject? subject
  +State<TestPage> createState()
}

"studyappcs::pages::test_page.dart::TestPage" o-- "studyappcs::states::subject.dart::Subject"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::pages::test_page.dart::TestPage"

class "studyappcs::pages::test_page.dart::_TestPageState" {
  +Test test
  +List<String> answers
  +void initState()
  +void submitAnswers()
  +Widget build()
}

"studyappcs::pages::test_page.dart::_TestPageState" o-- "studyappcs::states::test.dart::Test"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::pages::test_page.dart::_TestPageState"

class "studyappcs::states::flashcard.dart::FlashCard" {
  +String name
  +String meaning
  +bool learned
}

class "studyappcs::states::subject.dart::Subject" {
  +String name
  +List<Topic> topics
  +Color color
  +List<int> testScores
  +String teacher
  +String classroom
  +String asArea
  +int learned
  +int total
  +double percentage
  +Topic addTopic()
  +void addScore()
}

"studyappcs::states::subject.dart::Subject" o-- "dart::ui::Color"

class "studyappcs::states::task.dart::Task" {
  +String name
  +DateTime dueDate
  +bool completed
  +Color color
  +String desc
  +int review
}

"studyappcs::states::task.dart::Task" o-- "dart::ui::Color"

class "studyappcs::states::task.dart::TaskType" {
  +int index
  {static} +List<TaskType> values
  {static} +TaskType homework
  {static} +TaskType test
  {static} +TaskType quiz
  {static} +TaskType coursework
  {static} +TaskType personal
}

"studyappcs::states::task.dart::TaskType" o-- "studyappcs::states::task.dart::TaskType"
"dart::core::Enum" <|-- "studyappcs::states::task.dart::TaskType"

class "studyappcs::states::test.dart::TestCard" {
  +String meaning
  +String name
  +String origin
}

class "studyappcs::states::test.dart::Test" {
  +Map<TestCard, bool> scored
  +String date
  +String area
  +List<String> answers
  +int id
  +int percentage
  +int correct
  +int totalAmount
}

class "studyappcs::states::topic.dart::Topic" {
  +String name
  +List<FlashCard> cards
  +void addCard()
}

class "studyappcs::utils::expandable_fab.dart::ExFabController" {
  +bool open
  +void Function(bool) updateState
  +void close()
  +void expand()
}

"studyappcs::utils::expandable_fab.dart::ExFabController" o-- "null::void Function(bool)"

class "studyappcs::utils::expandable_fab.dart::ExpandableFab" {
  +List<ActionButton> children
  +ExFabController? controller
  +void Function()? onPress
  +State<ExpandableFab> createState()
}

"studyappcs::utils::expandable_fab.dart::ExpandableFab" o-- "studyappcs::utils::expandable_fab.dart::ExFabController"
"studyappcs::utils::expandable_fab.dart::ExpandableFab" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::utils::expandable_fab.dart::ExpandableFab"

class "studyappcs::utils::expandable_fab.dart::_ExpandableFabState" {
  -AnimationController _controller
  +Animation<double> animation
  -bool _open
  +Widget build()
  +void set()
  +void initState()
  +void toggle()
  +Widget buildButton()
  -List<Widget> _buildExpandingActionButtons()
}

"studyappcs::utils::expandable_fab.dart::_ExpandableFabState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"studyappcs::utils::expandable_fab.dart::_ExpandableFabState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::utils::expandable_fab.dart::_ExpandableFabState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "studyappcs::utils::expandable_fab.dart::_ExpandableFabState"

class "studyappcs::utils::expandable_fab.dart::ActionButton" {
  +void Function()? onPressed
  +Widget icon
  +String name
  +Widget build()
}

"studyappcs::utils::expandable_fab.dart::ActionButton" o-- "dart::ui::void Function()"
"studyappcs::utils::expandable_fab.dart::ActionButton" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "studyappcs::utils::expandable_fab.dart::ActionButton"

class "studyappcs::utils::expandable_fab.dart::ExpandingActionButton" {
  +double index
  +Animation<double> progress
  +ActionButton child
  +Widget build()
}

"studyappcs::utils::expandable_fab.dart::ExpandingActionButton" o-- "flutter::src::animation::animation.dart::Animation<double>"
"studyappcs::utils::expandable_fab.dart::ExpandingActionButton" o-- "studyappcs::utils::expandable_fab.dart::ActionButton"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "studyappcs::utils::expandable_fab.dart::ExpandingActionButton"

class "studyappcs::utils::input_dialogs.dart::DoubleInputDialog" {
  +String title
  +Input first
  +Input second
  +bool cancellable
  +State<DoubleInputDialog> createState()
}

"studyappcs::utils::input_dialogs.dart::DoubleInputDialog" o-- "studyappcs::utils::input_dialogs.dart::Input"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::utils::input_dialogs.dart::DoubleInputDialog"

class "studyappcs::utils::input_dialogs.dart::_DoubleInputDialogState" {
  +Widget buildInputField()
  +bool validateInput()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::utils::input_dialogs.dart::_DoubleInputDialogState"

class "studyappcs::utils::input_dialogs.dart::Input" {
  +String? name
  +bool exists
  +bool numerical
  +String? value
  +bool nullable
  +bool Function(String)? validate
  {static} +Input notExists()
}

"studyappcs::utils::input_dialogs.dart::Input" o-- "null::bool Function(String)"

class "studyappcs::utils::input_dialogs.dart::DialogResult" {
  +String first
  +String second
  {static} +DialogResult empty()
}

class "studyappcs::utils::outlined_card.dart::OutlinedCard" {
  +Color? color
  +Widget child
  +EdgeInsetsGeometry? margin
  +double elevation
  +double radius
  +Color? shadowColor
  +Widget build()
}

"studyappcs::utils::outlined_card.dart::OutlinedCard" o-- "dart::ui::Color"
"studyappcs::utils::outlined_card.dart::OutlinedCard" o-- "flutter::src::widgets::framework.dart::Widget"
"studyappcs::utils::outlined_card.dart::OutlinedCard" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "studyappcs::utils::outlined_card.dart::OutlinedCard"

class "studyappcs::widgets::day_card.dart::DayCard" {
  +DateTime date
  +List<Task> tasks
  +Color? color
  +void Function(Task) removeCallback
  +void Function(Task)? completeCallback
  +double progress
  +int positionInList
  +State<DayCard> createState()
}

"studyappcs::widgets::day_card.dart::DayCard" o-- "dart::ui::Color"
"studyappcs::widgets::day_card.dart::DayCard" o-- "null::void Function(Task)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::day_card.dart::DayCard"

class "studyappcs::widgets::day_card.dart::_DayCardState" {
  +String getDateLabel()
  +Widget buildTaskCard()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::day_card.dart::_DayCardState"

class "studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList" {
  +List<DateTime> dates
  +Map<DateTime, List<Task>> tasks
  +dynamic Function(Task) deleteCallback
  +dynamic Function(Task)? completeCallback
  +Color? outlineColor
  +String title
  +ExpansionTileController controller
  +void Function() onExpanded
  +State<ExpandingTaskList> createState()
}

"studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList" o-- "null::dynamic Function(Task)"
"studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList" o-- "dart::ui::Color"
"studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList" o-- "flutter::src::material::expansion_tile.dart::ExpansionTileController"
"studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::expanding_task_list.dart::ExpandingTaskList"

class "studyappcs::widgets::expanding_task_list.dart::_ExpandingTaskListState" {
  +void deleteAll()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::expanding_task_list.dart::_ExpandingTaskListState"

class "studyappcs::widgets::export_sheet.dart::BasicSlider" {
  +double scoresShow
  +State<BasicSlider> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::export_sheet.dart::BasicSlider"

class "studyappcs::widgets::export_sheet.dart::_BasicSliderState" {
  +double scoresShow
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::export_sheet.dart::_BasicSliderState"

class "studyappcs::widgets::result_card.dart::ResultCard" {
  +bool? correct
  +TestCard card
  +bool editable
  +String answer
  +void Function() markCorrect
  +BorderRadius borderRadius
  +State<ResultCard> createState()
}

"studyappcs::widgets::result_card.dart::ResultCard" o-- "studyappcs::states::test.dart::TestCard"
"studyappcs::widgets::result_card.dart::ResultCard" o-- "null::void Function()"
"studyappcs::widgets::result_card.dart::ResultCard" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::result_card.dart::ResultCard"

class "studyappcs::widgets::result_card.dart::_ResultCardState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::result_card.dart::_ResultCardState"

class "studyappcs::widgets::studied_chart.dart::StudiedChart" {
  +double animValue
  +State<StudiedChart> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::studied_chart.dart::StudiedChart"

class "studyappcs::widgets::studied_chart.dart::_StudiedChartState" {
  +List<String> getLastWeekNames()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::studied_chart.dart::_StudiedChartState"

class "studyappcs::widgets::subject_card.dart::SubjectCard" {
  +Subject subject
  +double width
  +State<SubjectCard> createState()
}

"studyappcs::widgets::subject_card.dart::SubjectCard" o-- "studyappcs::states::subject.dart::Subject"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::subject_card.dart::SubjectCard"

class "studyappcs::widgets::subject_card.dart::_SubjectCardState" {
  +bool selected
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::subject_card.dart::_SubjectCardState"

class "studyappcs::widgets::subject_option_menu.dart::SubjectOptionMenu" {
  +dynamic Function() editSubject
  +dynamic Function() editColor
  +dynamic Function() deleteSubject
  +dynamic Function() testSubject
  +dynamic Function() editInfo
  +int index
  +Animation<double> animation
  +Widget pIconButton()
  +Widget build()
}

"studyappcs::widgets::subject_option_menu.dart::SubjectOptionMenu" o-- "null::dynamic Function()"
"studyappcs::widgets::subject_option_menu.dart::SubjectOptionMenu" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "studyappcs::widgets::subject_option_menu.dart::SubjectOptionMenu"

class "studyappcs::widgets::task_popup.dart::TaskPopup" {
  +Task task
  +void Function(Task) deleteCallback
  +State<TaskPopup> createState()
}

"studyappcs::widgets::task_popup.dart::TaskPopup" o-- "studyappcs::states::task.dart::Task"
"studyappcs::widgets::task_popup.dart::TaskPopup" o-- "null::void Function(Task)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::task_popup.dart::TaskPopup"

class "studyappcs::widgets::task_popup.dart::_TaskPopupState" {
  +void edit()
  +void editColor()
  +void delete()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::task_popup.dart::_TaskPopupState"

class "studyappcs::widgets::test_input.dart::TestInput" {
  +String name
  +String area
  +dynamic Function(String) onChanged
  +EdgeInsetsGeometry padding
  +BorderRadius borderRadius
  +State<TestInput> createState()
}

"studyappcs::widgets::test_input.dart::TestInput" o-- "null::dynamic Function(String)"
"studyappcs::widgets::test_input.dart::TestInput" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"studyappcs::widgets::test_input.dart::TestInput" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::test_input.dart::TestInput"

class "studyappcs::widgets::test_input.dart::_TestInputState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::test_input.dart::_TestInputState"

class "studyappcs::widgets::topic_card.dart::TopicCard" {
  +Topic topic
  +dynamic Function() testTopic
  +String area
  +String subject
  +void Function() deleteTopic
  +State<TopicCard> createState()
}

"studyappcs::widgets::topic_card.dart::TopicCard" o-- "studyappcs::states::topic.dart::Topic"
"studyappcs::widgets::topic_card.dart::TopicCard" o-- "null::dynamic Function()"
"studyappcs::widgets::topic_card.dart::TopicCard" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "studyappcs::widgets::topic_card.dart::TopicCard"

class "studyappcs::widgets::topic_card.dart::_TopicCardState" {
  +bool checkExistingTerm()
  +void studyTopic()
  +dynamic renameTopic()
  +dynamic deleteTopic()
  +void addCard()
  +double learnedPercentage()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "studyappcs::widgets::topic_card.dart::_TopicCardState"


@enduml
